import { z } from 'zod';
import { fileExtensionSchema } from './fileExtensionSchema';
import { pluginModuleSchema } from './PluginModuleSchema';
import { serialiserModuleSchema } from './SerialiserModuleSchema';
import { sourceModuleSchema } from './SourceModuleSchema';

export const mosaicConfigSchema = z.object({
  /**
   * A collection of file extensions that can be served
   * e.g. [".mdx", ".json"]
   */
  pageExtensions: fileExtensionSchema.array().nonempty(),
  /**
   * A collection of filenames to ignore
   * These are typically generated by plugins.
   */
  ignorePages: z.string().array().optional(),
  serialisers: z.array(serialiserModuleSchema),
  plugins: z.array(pluginModuleSchema),
  sources: z.array(sourceModuleSchema).nonempty()
});

export type MosaicConfig = z.infer<typeof mosaicConfigSchema>;
