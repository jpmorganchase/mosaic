diff --git a/node_modules/@jpmorganchase/uitk-core/dist-cjs/node_modules/style-inject/dist/style-inject.es.js b/node_modules/@jpmorganchase/uitk-core/dist-cjs/node_modules/style-inject/dist/style-inject.es.js
index fac049a..5663033 100644
--- a/node_modules/@jpmorganchase/uitk-core/dist-cjs/node_modules/style-inject/dist/style-inject.es.js
+++ b/node_modules/@jpmorganchase/uitk-core/dist-cjs/node_modules/style-inject/dist/style-inject.es.js
@@ -2,7 +2,7 @@
 
 function styleInject(css, ref) {
   if ( ref === void 0 ) ref = {};
-  var insertAt = ref.insertAt;
+  var insertAt = ref.insertAt || 'top';
 
   if (!css || typeof document === 'undefined') { return; }
 
diff --git a/node_modules/@jpmorganchase/uitk-core/dist-cjs/packages/core/src/aria-announcer/AriaAnnouncerProvider.js b/node_modules/@jpmorganchase/uitk-core/dist-cjs/packages/core/src/aria-announcer/AriaAnnouncerProvider.js
index c700ca9..0d17a83 100644
--- a/node_modules/@jpmorganchase/uitk-core/dist-cjs/packages/core/src/aria-announcer/AriaAnnouncerProvider.js
+++ b/node_modules/@jpmorganchase/uitk-core/dist-cjs/packages/core/src/aria-announcer/AriaAnnouncerProvider.js
@@ -11,6 +11,10 @@ function AriaAnnouncerProvider({
   children,
   style
 }) {
+  if (typeof window === 'undefined') {
+    return children;
+  }
+
   const [currentAnnouncement, setCurrentAnnouncement] = React.useState("");
   const announcementsRef = React.useRef([]);
   const isAnnouncingRef = React.useRef(false);
diff --git a/node_modules/@jpmorganchase/uitk-core/dist-cjs/packages/core/src/layout/DeckLayout/DeckLayout.js b/node_modules/@jpmorganchase/uitk-core/dist-cjs/packages/core/src/layout/DeckLayout/DeckLayout.js
index b29c028..4b11688 100644
--- a/node_modules/@jpmorganchase/uitk-core/dist-cjs/packages/core/src/layout/DeckLayout/DeckLayout.js
+++ b/node_modules/@jpmorganchase/uitk-core/dist-cjs/packages/core/src/layout/DeckLayout/DeckLayout.js
@@ -39,7 +39,7 @@ const DeckLayout = React.forwardRef(
       []
     );
     useIsomorphicLayoutEffect.useIsomorphicLayoutEffect(() => {
-      if (!deckItemRef.current) {
+      if (!deckItemRef.current || typeof window === 'undefined') {
         return void 0;
       }
       handleResize(deckItemRef.current.getBoundingClientRect());
diff --git a/node_modules/@jpmorganchase/uitk-core/dist-cjs/packages/core/src/responsive/useResizeObserver.js b/node_modules/@jpmorganchase/uitk-core/dist-cjs/packages/core/src/responsive/useResizeObserver.js
index ba9d9fb..81365c2 100644
--- a/node_modules/@jpmorganchase/uitk-core/dist-cjs/packages/core/src/responsive/useResizeObserver.js
+++ b/node_modules/@jpmorganchase/uitk-core/dist-cjs/packages/core/src/responsive/useResizeObserver.js
@@ -25,7 +25,7 @@ const getTargetSize = (element, contentRect, dimension) => {
       return 0;
   }
 };
-const resizeObserver = new ResizeObserver((entries) => {
+const resizeObserver = typeof window !== 'undefined' ? new ResizeObserver((entries) => {
   for (const entry of entries) {
     const { target, contentRect } = entry;
     const observedTarget = observedMap.get(target);
@@ -48,7 +48,7 @@ const resizeObserver = new ResizeObserver((entries) => {
       }
     }
   }
-});
+}) :  { observe: () => undefined, unobserve: () => undefined };
 function useResizeObserver(ref, dimensions, onResize, reportInitialSize = false) {
   const dimensionsRef = React.useRef(dimensions);
   const measure = React.useCallback((target) => {
diff --git a/node_modules/@jpmorganchase/uitk-core/dist-cjs/packages/core/src/viewport/ViewportProvider.js b/node_modules/@jpmorganchase/uitk-core/dist-cjs/packages/core/src/viewport/ViewportProvider.js
index e0a0eb5..c75eb5e 100644
--- a/node_modules/@jpmorganchase/uitk-core/dist-cjs/packages/core/src/viewport/ViewportProvider.js
+++ b/node_modules/@jpmorganchase/uitk-core/dist-cjs/packages/core/src/viewport/ViewportProvider.js
@@ -7,6 +7,9 @@ var React = require('react');
 
 const ViewportContext = React.createContext(0);
 const ViewportProvider = ({ children }) => {
+  if (typeof window === 'undefined') {
+    return null;
+  }
   const [viewport, setViewport] = React.useState(0);
   React.useEffect(() => {
     const observer = new ResizeObserver(
diff --git a/node_modules/@jpmorganchase/uitk-core/dist-es/node_modules/style-inject/dist/style-inject.es.js b/node_modules/@jpmorganchase/uitk-core/dist-es/node_modules/style-inject/dist/style-inject.es.js
index 69a6f1b..8268fdc 100644
--- a/node_modules/@jpmorganchase/uitk-core/dist-es/node_modules/style-inject/dist/style-inject.es.js
+++ b/node_modules/@jpmorganchase/uitk-core/dist-es/node_modules/style-inject/dist/style-inject.es.js
@@ -1,6 +1,6 @@
 function styleInject(css, ref) {
   if ( ref === void 0 ) ref = {};
-  var insertAt = ref.insertAt;
+  var insertAt = ref.insertAt || 'top';
 
   if (!css || typeof document === 'undefined') { return; }
 
diff --git a/node_modules/@jpmorganchase/uitk-core/dist-es/packages/core/src/aria-announcer/AriaAnnouncerProvider.js b/node_modules/@jpmorganchase/uitk-core/dist-es/packages/core/src/aria-announcer/AriaAnnouncerProvider.js
index 289a42e..311b64f 100644
--- a/node_modules/@jpmorganchase/uitk-core/dist-es/packages/core/src/aria-announcer/AriaAnnouncerProvider.js
+++ b/node_modules/@jpmorganchase/uitk-core/dist-es/packages/core/src/aria-announcer/AriaAnnouncerProvider.js
@@ -7,6 +7,9 @@ function AriaAnnouncerProvider({
   children,
   style
 }) {
+  if (typeof window === 'undefined') {
+    return children;
+  }
   const [currentAnnouncement, setCurrentAnnouncement] = useState("");
   const announcementsRef = useRef([]);
   const isAnnouncingRef = useRef(false);
diff --git a/node_modules/@jpmorganchase/uitk-core/dist-es/packages/core/src/layout/DeckLayout/DeckLayout.js b/node_modules/@jpmorganchase/uitk-core/dist-es/packages/core/src/layout/DeckLayout/DeckLayout.js
index 8107014..14c37d5 100644
--- a/node_modules/@jpmorganchase/uitk-core/dist-es/packages/core/src/layout/DeckLayout/DeckLayout.js
+++ b/node_modules/@jpmorganchase/uitk-core/dist-es/packages/core/src/layout/DeckLayout/DeckLayout.js
@@ -31,7 +31,7 @@ const DeckLayout = forwardRef(
       []
     );
     useIsomorphicLayoutEffect(() => {
-      if (!deckItemRef.current) {
+      if (!deckItemRef.current || typeof window === undefined) {
         return void 0;
       }
       handleResize(deckItemRef.current.getBoundingClientRect());
diff --git a/node_modules/@jpmorganchase/uitk-core/dist-es/packages/core/src/responsive/useResizeObserver.js b/node_modules/@jpmorganchase/uitk-core/dist-es/packages/core/src/responsive/useResizeObserver.js
index ae11dda..fc78656 100644
--- a/node_modules/@jpmorganchase/uitk-core/dist-es/packages/core/src/responsive/useResizeObserver.js
+++ b/node_modules/@jpmorganchase/uitk-core/dist-es/packages/core/src/responsive/useResizeObserver.js
@@ -21,7 +21,7 @@ const getTargetSize = (element, contentRect, dimension) => {
       return 0;
   }
 };
-const resizeObserver = new ResizeObserver((entries) => {
+const resizeObserver = typeof window !== undefined ? new ResizeObserver((entries) => {
   for (const entry of entries) {
     const { target, contentRect } = entry;
     const observedTarget = observedMap.get(target);
@@ -44,7 +44,7 @@ const resizeObserver = new ResizeObserver((entries) => {
       }
     }
   }
-});
+}) : { observe: () => undefined, unobserve: () => undefined };
 function useResizeObserver(ref, dimensions, onResize, reportInitialSize = false) {
   const dimensionsRef = useRef(dimensions);
   const measure = useCallback((target) => {
diff --git a/node_modules/@jpmorganchase/uitk-core/dist-es/packages/core/src/viewport/ViewportProvider.js b/node_modules/@jpmorganchase/uitk-core/dist-es/packages/core/src/viewport/ViewportProvider.js
index 45115fd..f9d57f4 100644
--- a/node_modules/@jpmorganchase/uitk-core/dist-es/packages/core/src/viewport/ViewportProvider.js
+++ b/node_modules/@jpmorganchase/uitk-core/dist-es/packages/core/src/viewport/ViewportProvider.js
@@ -5,6 +5,9 @@ const ViewportContext = createContext(0);
 const ViewportProvider = ({ children }) => {
   const [viewport, setViewport] = useState(0);
   useEffect(() => {
+    if (typeof window === undefined) {
+      return null;
+    }
     const observer = new ResizeObserver(
       (observerEntries) => {
         setViewport(observerEntries[0].contentRect.width);
